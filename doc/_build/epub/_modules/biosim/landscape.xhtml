<!DOCTYPE html>


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>biosim.landscape</title>
    
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" /> 
  </head>
  <body role="document">

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for biosim.landscape</h1><div class="highlight"><pre>
<span></span><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">&quot;&quot;&quot;</span>

<span class="n">__author__</span> <span class="o">=</span> <span class="s1">&#39;Jon-Fredrik Blakstad Cappelen&#39;</span><span class="p">,</span> <span class="s1">&#39;Lars Martin Boe Lied&#39;</span>
<span class="n">__email__</span> <span class="o">=</span> <span class="s1">&#39;jon-fredrik.blakstad.cappelen@nmbu.no&#39;</span><span class="p">,</span>\
            <span class="s1">&#39;lars.martin.boe.lied@nmbu.no&#39;</span>


<span class="kn">import</span> <span class="nn">copy</span>
<span class="kn">from</span> <span class="nn">biosim.animals</span> <span class="k">import</span> <span class="n">Herbivore</span><span class="p">,</span> <span class="n">Carnivore</span>


<div class="viewcode-block" id="Jungle"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle">[docs]</a><span class="k">class</span> <span class="nc">Jungle</span><span class="p">:</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Class for the jungle, containing all methods used in the Jungle-landscape</span>
<span class="sd">    &quot;&quot;&quot;</span>

    <span class="n">DEFAULT_JUNGLE_PARAMETERS</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;f_max&#39;</span><span class="p">:</span> <span class="mf">800.0</span><span class="p">}</span>
    <span class="n">parameters</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">DEFAULT_JUNGLE_PARAMETERS</span><span class="p">)</span>

    <span class="nd">@classmethod</span>
<div class="viewcode-block" id="Jungle.set_parameters"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.set_parameters">[docs]</a>    <span class="k">def</span> <span class="nf">set_parameters</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">parameter_changes</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that allows the user to set parameter values for the landscape.</span>

<span class="sd">        Parameters</span>
<span class="sd">        ----------</span>
<span class="sd">        parameter_changes : dict</span>
<span class="sd">            The changes to be made to the parameters</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>


        <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">parameter_changes</span><span class="p">:</span>
            <span class="bp">cls</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">parameter_changes</span><span class="p">[</span><span class="n">key</span><span class="p">]</span></div>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Constructor for the jungle class</span>
<span class="sd">        &quot;&quot;&quot;</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">])</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores_new</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores_new</span> <span class="o">=</span> <span class="p">[]</span>

<div class="viewcode-block" id="Jungle.add_herbivore"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.add_herbivore">[docs]</a>    <span class="k">def</span> <span class="nf">add_herbivore</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">age</span><span class="p">,</span> <span class="n">weight</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for adding a herbivore into the landscape instance.</span>

<span class="sd">        Parameters</span>
<span class="sd">        ----------</span>
<span class="sd">        age : int</span>
<span class="sd">            The age for the herbivore to be added</span>
<span class="sd">        weight : float</span>
<span class="sd">            The weight for the animal to be added</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Herbivore</span><span class="p">(</span><span class="n">age</span><span class="p">,</span> <span class="n">weight</span><span class="p">))</span></div>

<div class="viewcode-block" id="Jungle.add_carnivore"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.add_carnivore">[docs]</a>    <span class="k">def</span> <span class="nf">add_carnivore</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">age</span><span class="p">,</span> <span class="n">weight</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for adding a carnivore into the landscape-cell</span>

<span class="sd">        Parameters</span>
<span class="sd">        ----------</span>
<span class="sd">        age : int</span>
<span class="sd">            The age for the carnivore to be added</span>
<span class="sd">        weight : float</span>
<span class="sd">            The weight for the carnivore to be added</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Carnivore</span><span class="p">(</span><span class="n">age</span><span class="p">,</span> <span class="n">weight</span><span class="p">))</span></div>

<div class="viewcode-block" id="Jungle.reset_fodder"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.reset_fodder">[docs]</a>    <span class="k">def</span> <span class="nf">reset_fodder</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that resets the amount of fodder in the jungle to f_max.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">])</span></div>

<div class="viewcode-block" id="Jungle.reduce_fodder"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.reduce_fodder">[docs]</a>    <span class="k">def</span> <span class="nf">reduce_fodder</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">amount</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for reducing the amount of fodder available in landscape instance</span>

<span class="sd">        Parameters</span>
<span class="sd">        ----------</span>
<span class="sd">        amount : float, int</span>
<span class="sd">            How much fodder is to be removed from landscape instance.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span> <span class="o">-=</span> <span class="n">amount</span></div>

<div class="viewcode-block" id="Jungle.get_fodder"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.get_fodder">[docs]</a>    <span class="k">def</span> <span class="nf">get_fodder</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for getting fodder in the landscape instance.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        self.fodder : int</span>
<span class="sd">            Amount of fodder left is landscape instance.</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span></div>
    
<div class="viewcode-block" id="Jungle.move_new_animals"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.move_new_animals">[docs]</a>    <span class="k">def</span> <span class="nf">move_new_animals</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for moving animals from the new-lists into the real one.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores_new</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores_new</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores_new</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores_new</span> <span class="o">=</span> <span class="p">[]</span></div>

<div class="viewcode-block" id="Jungle.get_herbivores"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.get_herbivores">[docs]</a>    <span class="k">def</span> <span class="nf">get_herbivores</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for getting a list of all herbivore in the landscape instance</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        self.hebivores : list</span>
<span class="sd">            List of herbivores in instance</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span></div>

<div class="viewcode-block" id="Jungle.get_carnivores"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.get_carnivores">[docs]</a>    <span class="k">def</span> <span class="nf">get_carnivores</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for getting a list of all carnivores in the landscape instance</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        self.carnivores : list</span>
<span class="sd">            List of carnivores in landscape instance.</span>
<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span></div>

<div class="viewcode-block" id="Jungle.get_abundance_herbivore"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.get_abundance_herbivore">[docs]</a>    <span class="k">def</span> <span class="nf">get_abundance_herbivore</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for calculating abundance of food for herbivore in landscape.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        ek : float</span>
<span class="sd">            Abundance of food for herbivores in landscape.</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="n">ek</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">get_fodder</span><span class="p">())</span><span class="o">/</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores_new</span><span class="p">)</span>
                                   <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">Herbivore</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;F&#39;</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">ek</span></div>

<div class="viewcode-block" id="Jungle.get_abundance_carnivore"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.get_abundance_carnivore">[docs]</a>    <span class="k">def</span> <span class="nf">get_abundance_carnivore</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method for calculating abundance of food for carnivore in landscape.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        ek : float</span>
<span class="sd">            Abundance of food for carnivores in landscape</span>
<span class="sd">        &quot;&quot;&quot;</span>
        <span class="n">herbivores_weight</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores_new</span><span class="p">:</span>
            <span class="n">herbivores_weight</span> <span class="o">+=</span> <span class="n">animal</span><span class="o">.</span><span class="n">get_weight</span><span class="p">()</span>

        <span class="n">ek</span> <span class="o">=</span> <span class="n">herbivores_weight</span> <span class="o">/</span> <span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores_new</span><span class="p">)</span>
                                   <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">Carnivore</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;F&#39;</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">ek</span></div>

<div class="viewcode-block" id="Jungle.feeding"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.feeding">[docs]</a>    <span class="k">def</span> <span class="nf">feeding</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that makes all animals in the cell feed.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">reset_fodder</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">fitness</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="p">:</span>
            <span class="n">animal</span><span class="o">.</span><span class="n">feeding</span><span class="p">(</span><span class="n">landscape_instance</span><span class="o">=</span><span class="bp">self</span><span class="p">)</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">fitness</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="n">fitness</span><span class="p">,</span> <span class="n">reverse</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="p">:</span>
            <span class="n">eaten_bool</span> <span class="o">=</span> <span class="n">animal</span><span class="o">.</span><span class="n">feeding</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="p">)</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">=</span> <span class="p">[</span><span class="n">animal</span> <span class="k">for</span> <span class="n">index</span><span class="p">,</span> <span class="n">animal</span> <span class="ow">in</span>
                               <span class="nb">enumerate</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="p">)</span> <span class="k">if</span> <span class="n">eaten_bool</span><span class="p">[</span><span class="n">index</span><span class="p">]]</span></div>

<div class="viewcode-block" id="Jungle.procreation"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.procreation">[docs]</a>    <span class="k">def</span> <span class="nf">procreation</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that makes all animals in the cell try to procreate</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="sd">&quot;&quot;&quot;Method that makes all animals in the cell try to procreate&quot;&quot;&quot;</span>
        <span class="n">number_adult_herbivores</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="p">)</span>
        <span class="n">number_adult_carnivores</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span><span class="p">:</span>
            <span class="n">animal</span><span class="o">.</span><span class="n">procreation</span><span class="p">(</span><span class="n">landscape_instance</span><span class="o">=</span><span class="bp">self</span><span class="p">,</span>
                               <span class="n">number_of_adults</span><span class="o">=</span><span class="n">number_adult_herbivores</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="p">:</span>
            <span class="n">animal</span><span class="o">.</span><span class="n">procreation</span><span class="p">(</span><span class="n">landscape_instance</span><span class="o">=</span><span class="bp">self</span><span class="p">,</span>
                               <span class="n">number_of_adults</span><span class="o">=</span><span class="n">number_adult_carnivores</span><span class="p">)</span>

        <span class="bp">self</span><span class="o">.</span><span class="n">move_new_animals</span><span class="p">()</span></div>

<div class="viewcode-block" id="Jungle.migration"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.migration">[docs]</a>    <span class="k">def</span> <span class="nf">migration</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Dummy. Migration is handled by the class Island.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span></div>

<div class="viewcode-block" id="Jungle.aging"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.aging">[docs]</a>    <span class="k">def</span> <span class="nf">aging</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that makes all animals in the cell age</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="p">:</span>
            <span class="n">animal</span><span class="o">.</span><span class="n">aging</span><span class="p">()</span></div>

<div class="viewcode-block" id="Jungle.loss_of_weight"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.loss_of_weight">[docs]</a>    <span class="k">def</span> <span class="nf">loss_of_weight</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that makes all animals in the cell lose weight</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span><span class="p">:</span>
            <span class="n">animal</span><span class="o">.</span><span class="n">loss_of_weight</span><span class="p">()</span></div>

<div class="viewcode-block" id="Jungle.death"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Jungle.death">[docs]</a>    <span class="k">def</span> <span class="nf">death</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that makes some animals in the cell die, and remove them.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span> <span class="o">=</span> <span class="p">[</span><span class="n">animal</span> <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">herbivores</span>
                           <span class="k">if</span> <span class="ow">not</span> <span class="n">animal</span><span class="o">.</span><span class="n">death</span><span class="p">()]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span> <span class="o">=</span> <span class="p">[</span><span class="n">animal</span> <span class="k">for</span> <span class="n">animal</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">carnivores</span>
                           <span class="k">if</span> <span class="ow">not</span> <span class="n">animal</span><span class="o">.</span><span class="n">death</span><span class="p">()]</span></div></div>


<div class="viewcode-block" id="Savannah"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Savannah">[docs]</a><span class="k">class</span> <span class="nc">Savannah</span><span class="p">(</span><span class="n">Jungle</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Savannah is a subclass of Jungle, inheriting most of its methods</span>
<span class="sd">    &quot;&quot;&quot;</span>

    <span class="n">DEFAULT_SAVANNAH_PARAMETERS</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;f_max&#39;</span><span class="p">:</span> <span class="mf">300.0</span><span class="p">,</span> <span class="s1">&#39;alpha&#39;</span><span class="p">:</span> <span class="mf">0.3</span><span class="p">}</span>
    <span class="n">parameters</span> <span class="o">=</span> <span class="n">copy</span><span class="o">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">DEFAULT_SAVANNAH_PARAMETERS</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>

<div class="viewcode-block" id="Savannah.reset_fodder"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Savannah.reset_fodder">[docs]</a>    <span class="k">def</span> <span class="nf">reset_fodder</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Method that updates the fodder amount in the savannah each year</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span> <span class="o">+=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;alpha&#39;</span><span class="p">]</span> <span class="o">*</span> \
            <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span><span class="p">)</span></div></div>


<div class="viewcode-block" id="Desert"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Desert">[docs]</a><span class="k">class</span> <span class="nc">Desert</span><span class="p">(</span><span class="n">Jungle</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Desert is a subclass of Jungle, inheriting most of its methods</span>
<span class="sd">    &quot;&quot;&quot;</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">()</span><span class="o">.</span><span class="fm">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">fodder</span> <span class="o">=</span> <span class="mi">0</span>

<div class="viewcode-block" id="Desert.reset_fodder"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Desert.reset_fodder">[docs]</a>    <span class="k">def</span> <span class="nf">reset_fodder</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Replaces the method Jungle.reset_fodder. It does nothing</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span></div>

<div class="viewcode-block" id="Desert.feeding"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Desert.feeding">[docs]</a>    <span class="k">def</span> <span class="nf">feeding</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Replaces the method Jungle.feeding. It does nothing</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>

<span class="sd">        &quot;&quot;&quot;</span></div></div>


<div class="viewcode-block" id="Ocean"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Ocean">[docs]</a><span class="k">class</span> <span class="nc">Ocean</span><span class="p">:</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Class for Ocean landscape. Is passive.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;&quot;&quot;&quot;</span></div>


<div class="viewcode-block" id="Mountain"><a class="viewcode-back" href="../../landscape.xhtml#biosim.landscape.Mountain">[docs]</a><span class="k">class</span> <span class="nc">Mountain</span><span class="p">:</span>
    <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">    Class for mountain landscape. Is passive.</span>
<span class="sd">    &quot;&quot;&quot;</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;&quot;&quot;&quot;</span></div>


<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>

    <span class="n">j1</span> <span class="o">=</span> <span class="n">Jungle</span><span class="p">()</span>
    <span class="n">s1</span> <span class="o">=</span> <span class="n">Savannah</span><span class="p">()</span>
    <span class="n">j2</span> <span class="o">=</span> <span class="n">Jungle</span><span class="p">()</span>
    <span class="n">s2</span> <span class="o">=</span> <span class="n">Savannah</span><span class="p">()</span>
    <span class="n">m1</span> <span class="o">=</span> <span class="n">Mountain</span><span class="p">()</span>

    <span class="nb">print</span><span class="p">(</span><span class="n">j1</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">s1</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">j2</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">])</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">s2</span><span class="o">.</span><span class="n">parameters</span><span class="p">[</span><span class="s1">&#39;f_max&#39;</span><span class="p">],</span> <span class="n">s2</span><span class="o">.</span><span class="n">fodder</span><span class="p">)</span>

    <span class="c1"># isinstanse</span>

    <span class="nb">print</span><span class="p">(</span><span class="nb">isinstance</span><span class="p">(</span><span class="n">s1</span><span class="p">,</span> <span class="p">(</span><span class="n">Jungle</span><span class="p">,</span> <span class="n">Savannah</span><span class="p">,</span> <span class="n">Desert</span><span class="p">)))</span>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>